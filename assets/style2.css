@import url('https://fonts.googleapis.com/css?family=Montserrat:900i&display=swap');
*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: inherit;
}
body {
text-align: center;
    min-height: 100vh;
    background-color: #F8F005;
    font-family: 'Montserrat', sans-serif;
    
  }

  span{

    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size:120px;
    letter-spacing:0.1em;
    -webkit-text-fill-color: transparent;
    -webkit-text-stroke-width: 3px;
    -webkit-text-stroke-color: white;
    text-shadow: 
              8px 8px #ff1f8f,
              20px 20px #000000;
  }
  
  button, button::after {
    width: 380px;
    height: 86px;
    font-size: 36px;
    font-family: 'Bebas Neue', cursive;
    background: linear-gradient(45deg, transparent 5%, #FF013C 5%);
    border: 0;
    color: #fff;
    letter-spacing: 3px;
    line-height: 88px;
    box-shadow: 6px 0px 0px #00E6F6;
    outline: transparent;
    position: relative;
  }
  
  button::after {
    --slice-0: inset(50% 50% 50% 50%);
    --slice-1: inset(80% -6px 0 0);
    --slice-2: inset(50% -6px 30% 0);
    --slice-3: inset(10% -6px 85% 0);
    --slice-4: inset(40% -6px 43% 0);
    --slice-5: inset(80% -6px 5% 0);
    
    content: 'EKLE';
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(45deg, transparent 3%, #00E6F6 3%, #00E6F6 5%, #FF013C 5%);
    text-shadow: -3px -3px 0px #F8F005, 3px 3px 0px #00E6F6;
    clip-path: var(--slice-0);
  }
  
  button:hover::after {
    animation: 1s glitch;
    animation-timing-function: steps(2, end);
  }
  
  @keyframes glitch {
    0% {
      clip-path: var(--slice-1);
      transform: translate(-20px, -10px);
    }
    10% {
      clip-path: var(--slice-3);
      transform: translate(10px, 10px);
    }
    20% {
      clip-path: var(--slice-1);
      transform: translate(-10px, 10px);
    }
    30% {
      clip-path: var(--slice-3);
      transform: translate(0px, 5px);
    }
    40% {
      clip-path: var(--slice-2);
      transform: translate(-5px, 0px);
    }
    50% {
      clip-path: var(--slice-3);
      transform: translate(5px, 0px);
    }
    60% {
      clip-path: var(--slice-4);
      transform: translate(5px, 10px);
    }
    70% {
      clip-path: var(--slice-2);
      transform: translate(-10px, 10px);
    }
    80% {
      clip-path: var(--slice-5);
      transform: translate(20px, -10px);
    }
    90% {
      clip-path: var(--slice-1);
      transform: translate(-10px, 0px);
    }
    100% {
      clip-path: var(--slice-1);
      transform: translate(0);
    }
  }

  .form__label {
    font-family: 'Roboto', sans-serif;
    font-size: 1.2rem;
    margin-left: 2rem;
    margin-top: 0.7rem;
    display: block;
    transition: all 0.3s;
    transform: translateY(0rem);
  }
  
  .form__input {
    font-family: 'Roboto', sans-serif;
    color: #333;
    font-size: 1.2rem;
      margin: 0 auto;
    padding: 1.5rem 2rem;
    border-radius: 0.2rem;
    background-color: rgb(255, 255, 255);
    border: none;
    width: 90%;
    display: block;
    border-bottom: 0.3rem solid transparent;
    transition: all 0.3s;
  }
  
  .form__input:placeholder-shown + .form__label {
    opacity: 0;
    visibility: hidden;
    -webkit-transform: translateY(-4rem);
    transform: translateY(-4rem);
  }
  

  
/* List with bullets */
.list-bullets {
  list-style: none;
}

.list-bullets li {
  display: flex;
  align-items: center;
}

.list-bullets li::before {
  content: '';
  width: 12px;
  height: 12px;
  border-radius: 50%;
  background: #5784d7;
  border: 2px solid #8fb3f5;
  display: block;
  margin-right: 1rem;
}

/* Unordered list with custom numbers style */
ol.custom-numbers {
  list-style: none;
}

ol.custom-numbers li {
  counter-increment: my-awesome-counter;
}

ol.custom-numbers li::before {
  content: counter(my-awesome-counter) ". ";
  color: #2b90d9;
  font-weight: bold;
}


/*
=====
DEPENDENCIES
=====
*/

.r-link{
	display: var(--rLinkDisplay, inline-flex) !important;
}

.r-link[href]{
	color: var(--rLinkColor) !important;
	text-decoration: var(--rLinkTextDecoration, none) !important;
}

.text-underlined{
    /*
        1. I use pixels units because others units (em, rem, vw, vh, etc) can
        lead to the mistake of displaying a circumcised line
    */

    --uiTextUnderlinedLineHeight: var(--textUnderlinedLineHeight, 2px); /* 1 */
    --uiTextUnderlinedLineGap: var(--textUnderlinedLineGap, .5rem);
    --uiTextUnderlinedPaddingBottom: calc(var(--uiTextUnderlinedLineHeight) + var(--uiTextUnderlinedLineGap));

    padding-bottom: var(--uiTextUnderlinedPaddingBottom) !important;
    position: var(--textUnderlinedPosition, relative) !important;
		z-index: var(--textUnderlinedZindex, 1) !important;
}

.text-underlined::after{
    content: "";
    width: var(--textUnderlinedLineWidht, 100%) !important;
    height: var(--uiTextUnderlinedLineHeight) !important;
		background-image: var(--textUnderlinedBackgroundImage, linear-gradient(to top, var(--textUnderlinedLineColor, currentColor) 30%, rgba(0, 0, 0, 0) 45%)) !important;

    position: absolute;
    left: var(--textUnderlinedLineLeft, 0) !important;
    bottom: var(--textUnderlinedLineBottom, 0) !important;
		z-index: var(--textUnderlinedLineZindex, -1) !important;
}

/*
=====
CORE
=====
*/

.link{
	--textUnderlinedLineHeight: 100%;
	--textUnderlinedLineGap: 0;
	--textUnderlinedLineColor: #fed330;
	
	padding-left: .75rem;
	padding-right: .75rem;
}

.link::after{
	will-change: width;
	transition: width .1s ease-out;
	transform: rotate(-2deg);
	transform-origin: left bottom;
}

.link:hover{
	--textUnderlinedLineWidht: 0;
}

.link:hover::after{
	transition-duration: .15s;
}

/*
* These styles for text decoration. The demo will be work without it
*/

.link{
	font-weight: 700;
	text-transform: uppercase;
}

.link:focus{
	outline: 2px solid #fed330;
	outline-offset: .5rem;
}